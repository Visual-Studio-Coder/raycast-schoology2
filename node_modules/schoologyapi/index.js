const axios = require("axios")
const OAuth = require("oauth-1.0a")
const crypto = require("crypto")

class SchoologyAPI {
	constructor(key, secret) {
		this.oauth = new OAuth({
			consumer: { key, secret },
			signature_method: "HMAC-SHA1",
			hash_function: (base_string, key) => crypto.createHmac("sha1", key).update(base_string).digest("base64")
		})
	}

	async request(method, path, body = {}, accessToken = "") {
		const url = `https://api.schoology.com/v1${path}`
		return await axios({
			method: method,
			url: url,
			headers: this.oauth.toHeader(this.oauth.authorize({ url, method: method }, this.formatToken(accessToken))),
			data: body
		}).then(response => response.data).catch(error => error.response.data)
	}

	createRequestToken = async () => await this.request("GET", "/oauth/request_token")

	getAccessToken = async requestToken => await this.request("GET", "/oauth/access_token", {}, requestToken)

	createOAuthURL = (requestToken, district, callback) => `https://${district}.schoology.com/oauth/authorize?oauth_token=${(this.formatToken(requestToken)).key}&oauth_callback=${callback}`

	formatToken = token => ({ key: token.slice(12, 53), secret: token.slice(73, 105) })
}

module.exports = SchoologyAPI

//tree tree t0rr m0uth